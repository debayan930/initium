{"version":3,"sources":["hoc/Layout/Layout.module.css","components/UI/Logo/Logo.module.css","components/UI/Topbar/Topbar.module.css","components/UI/Spinner/Spinner.module.css","components/Checkout/Checkout.module.css","components/UI/Logo/Logo.js","components/UI/NavigationItems/NavigationItem/NavigationItem.js","components/UI/NavigationItems/NavigationItems.js","components/UI/Topbar/Topbar.js","hoc/Layout/Layout.js","components/CartItemsList/CartItem/CartItem.js","components/CartItemsList/CartItemList.js","containers/Cart/Cart.js","components/UI/SignUpForm.js","components/UI/TextInput/TextInput.js","components/Checkout/Checkout.js","containers/CheckoutSummary/CheckoutSummary.js","containers/App.js","serviceWorker.js","store/reducers/bookReducer.js","store/reducers/cartReducer.js","index.js","components/CartItemsList/CartItem/CartItem.module.css","components/CartItemsList/CartItemList.module.css","hoc/Auxiliary/Auxiliary.js","axios.js","store/actionTypes.js","components/UI/NavigationItems/NavigationItems.module.css","components/UI/TextInput/TextInput.module.css","assets/constants/Constants.js","store/actions/cartActions.js","components/UI/NavigationItems/NavigationItem/NavigationItem.module.css","store/actions/bookActions.js","components/UI/Spinner/Spinner.js"],"names":["module","exports","withRouter","props","className","classes","Logo","onClick","history","push","goHomeHandler","NavigationItem","to","link","exact","Link","activeClassName","active","item","connect","state","genres","bookReducer","NavigationItems","Dropdown","DropdownContent","length","map","genre","key","Topbar","Layout","sideDrawer","this","children","Component","cart","cartReducer","dispatch","setBookQuantity","book","quantity","removeFromCart","CartItem","src","id","alt","Img","CartItemContent","Title","title","Author","author","Language","language","format","Quantity","name","onChange","e","target","value","selectChangeHandler","defaultValue","num","Button","Price","price","CartItemList","useHistory","Header","Total","total","i","calcTotal","Checkout","MyTextInput","label","useField","field","meta","htmlFor","touched","error","SignUpForm","initialValues","firstName","lastName","email","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","console","log","submitForm","type","placeholder","TextInput","InputContainer","Error","address","gift","delivery","tnc","axios","post","then","response","catch","CheckoutSummary","Books","lazy","App","fetchGenres","fallback","Spinner","path","component","Cart","books","Boolean","window","location","hostname","match","initialState","bookCount","loading","reducer","action","actions","payload","arr","Array","isArray","filter","Object","x","parseInt","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","Aux","instance","create","baseURL","FETCH_GENRES","FETCH_BOOKS","FETCH_BOOK_COUNT","FETCH_LOADING_STATUS","ADD_TO_CART","REMOVE_FROM_CART","SET_BOOK_QUANTITY","RESULTS_PER_PAGE","addToCart","updateBooks","updateBooksLoading","flag","get","data","fetchBooks","offset","constants","fetchBookCount","count"],"mappings":"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","file":"static/js/main.3b8f7654.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1n1Ke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1Ldl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topbar\":\"Topbar_Topbar__3ugaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__2ai49\",\"load1\":\"Spinner_load1__43uI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__3PnJq\"};","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './Logo.module.css';\r\n\r\nconst goHomeHandler = (props) => {\r\n    props.history.push('/');\r\n}\r\n\r\nconst Logo = (props) => (\r\n    <span\r\n        className={classes.Logo}\r\n        onClick={() => goHomeHandler(props)}\r\n    >\r\n        Librum\r\n    </span>\r\n);\r\n\r\nexport default withRouter(Logo);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = (props) => (\r\n    <NavLink\r\n        to={props.link}\r\n        exact\r\n        className={classes.Link}\r\n        activeClassName={classes.active}\r\n    >\r\n        {props.item}\r\n    </NavLink>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\nimport '../../../../node_modules/@fortawesome/fontawesome-free/css/all.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavigationItems = (props) => (\r\n    <div className={classes.NavigationItems}>\r\n        <NavigationItem item='Home' link='/' />\r\n        <NavigationItem item='Books' link='/books' />\r\n        <NavigationItem item='Authors' link='/authors' />\r\n        <div className={classes.Dropdown}>\r\n            <span>Genres&nbsp;<i className=\"fas fa-caret-down\"></i></span>\r\n            <div className={classes.DropdownContent}>\r\n                {\r\n                    props.genres.length === 0 ? <p>Loading...</p> : props.genres.map(genre => {\r\n                        const link = '/' + genre;\r\n                        return <NavLink key={genre} to={link} exact>{genre}</NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <NavigationItem item='Cart' link='/cart' />\r\n        <NavigationItem item='Orders' link='/orders' />\r\n        <NavigationItem item='Formik' link='/formik' />\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        genres: state.bookReducer.genres\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);","import React from 'react';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './Topbar.module.css';\r\n\r\nconst Topbar = (props) => (\r\n    <div className={classes.Topbar}>\r\n        <Logo />\r\n        <NavigationItems />\r\n    </div>\r\n);\r\n\r\nexport default Topbar;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Topbar from '../../components/UI/Topbar/Topbar';\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        sideDrawer: false\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Topbar />\r\n                <div className={classes.Layout}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Layout;","import classes from './CartItem.module.css';\r\nimport React from 'react';\r\nimport { removeFromCart, setBookQuantity } from '../../../store/actions/cartActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = (props) => {\r\n    const selectChangeHandler = (e, book) => {\r\n        props.setBookQuantity(book, e.target.value);\r\n    }\r\n    \r\n    return(\r\n    <div className={classes.CartItem}>\r\n        <img src={`https://robohash.org/${props.book.id}.png?size=80x80&set=set3`} alt={props.book.id} className={classes.Img} />\r\n        <div className={classes.CartItemContent}>\r\n            <label className={classes.Title}>{props.book.title}</label>\r\n            <label className={classes.Author}>by {props.book.author}</label>\r\n            <label className={classes.Language}>{props.book.language}</label>\r\n            <label className={classes.Author}>{props.book.format.format}</label>\r\n            <label className={classes.Quantity}>Qty:&nbsp;</label>\r\n            <select name='quantity' onChange={(e) => selectChangeHandler(e, props.book)} defaultValue={props.book.quantity}>\r\n                {\r\n                    [1,2,3,4].map(num => <option key={num} value={num}>{num}</option>)\r\n                }\r\n            </select>\r\n        </div>\r\n        <button className={classes.Button} onClick={() => props.removeFromCart(props.book)}>Remove</button>\r\n        <div className={classes.Price}>\r\n            {props.book.format.price}\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cartReducer.cart\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setBookQuantity: (book, quantity) => dispatch(setBookQuantity(book, quantity)),\r\n        removeFromCart: (book) => dispatch(removeFromCart(book))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItem);","import React from 'react';\r\nimport CartItem from './CartItem/CartItem';\r\nimport classes from './CartItemList.module.css';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst calcTotal = (cart) => {\r\n    let total = 0;\r\n    for(let i=0;i<cart.length;i++){\r\n        total = total + (cart[i].format.price * cart[i].quantity);\r\n    }\r\n    return total;\r\n};\r\n\r\nconst CartItemList = (props) => {\r\n    let history = useHistory();\r\n\r\n    return(\r\n    <div className={classes.CartItemList}>\r\n        <label className={classes.Header}>Shopping Cart</label>\r\n        {\r\n            props.cart.length === 0 ? <p>Cart is Empty. Please add books!!!</p> : \r\n            props.cart.map((item, id) => <CartItem key={id} book={item} />)\r\n        }\r\n        {props.cart.length === 0 ? null : <Aux><div className={classes.Total}>\r\n            <label className={classes.Header}>Total</label>\r\n            <label className={classes.Header}>₹ {calcTotal(props.cart)}</label>\r\n        </div><button className={classes.Checkout} onClick={() => history.push('/checkout')}>Checkout</button></Aux>}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default CartItemList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartItemList from '../../components/CartItemsList/CartItemList';\r\n\r\nconst Cart = (props) => {\r\n    return(\r\n        <CartItemList cart={props.cart} />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cartReducer.cart\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cart);","import { Form, Formik, useField } from 'formik';\r\nimport React from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport * as Yup from 'yup';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return(\r\n        <Aux>\r\n            <label htmlFor={props.id || props.name}>{label}</label>\r\n            <input className='text-input' {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className='error'>{meta.error}</div>\r\n            ) : null}\r\n        </Aux>\r\n    );\r\n};\r\n\r\nconst submitForm = (values) => {\r\n    console.log(values);\r\n}\r\n\r\nconst SignUpForm = () => (\r\n    <Formik\r\n        initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: ''\r\n        }}\r\n        validationSchema={Yup.object({\r\n            firstName: Yup.string()\r\n                .max(15, 'Must be 15 characters or less')\r\n                .required('Required'),\r\n            lastName: Yup.string()\r\n                .max(10, 'Must be 10 characters or less')\r\n                .required('Required'),\r\n            email: Yup.string()\r\n                .email('Invalid email address')\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            submitForm(values);\r\n            setSubmitting(false);\r\n        }}\r\n    >\r\n        <Form>\r\n            <MyTextInput\r\n                label='First Name'\r\n                name='firstName'\r\n                type='text'\r\n                placeholder='John'\r\n            />\r\n            <MyTextInput\r\n                label='Last Name'\r\n                name='lastName'\r\n                type='text'\r\n                placeholder='Doe'\r\n            />\r\n            <MyTextInput\r\n                label='Email'\r\n                name='email'\r\n                type='email'\r\n                placeholder='johndoe@email.com'\r\n            />\r\n            <button type='submit'>Submit</button>\r\n        </Form>\r\n    </Formik>\r\n);\r\n\r\nexport default SignUpForm;","import classes from './TextInput.module.css';\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\n\r\nconst TextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return(\r\n        <div className={classes.InputContainer}>\r\n            <label htmlFor={props.id || props.label}>{label}</label>\r\n            <input className={classes.TextInput} {...field} {...props} />\r\n            {meta.touched && meta.error ? <div className={classes.Error}>{meta.error}</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInput;","import classes from './Checkout.module.css';\r\nimport React from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextInput from '../UI/TextInput/TextInput';\r\nimport axios from '../../axios';\r\n\r\nconst Checkout = (props) => (\r\n    <div className={classes.Checkout}>\r\n        <Formik\r\n            initialValues={{\r\n                name: '',\r\n                email: '',\r\n                address: '',\r\n                gift: false,\r\n                delivery: '',\r\n                tnc: false\r\n            }}\r\n            validationSchema={Yup.object({\r\n                name: Yup.string()\r\n                    .max(30, 'Must be 30 characters or less')\r\n                    .required('Required'),\r\n                email: Yup.string()\r\n                    .email('Invalid email address')\r\n                    .required('Required'),\r\n                address: Yup.string()\r\n                    .max(50, 'Must be 50 characters or less')\r\n                    .required('Required')\r\n            })}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                console.log(values);\r\n                axios.post('/orders', values)\r\n                    .then(response => console.log(response))\r\n                    .catch(error => console.log(error));\r\n                setSubmitting(false);\r\n            }}\r\n        >\r\n            <Form>\r\n                <TextInput\r\n                    label='Name'\r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='John Doe'\r\n                />\r\n                <TextInput\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='johndoe@email.com'\r\n                />\r\n                <TextInput\r\n                    label='Address'\r\n                    name='address'\r\n                    type='text'\r\n                    placeholder='House,Locality, City, Pin'\r\n                />\r\n                <button type='submit'>Submit</button>\r\n            </Form>\r\n        </Formik>\r\n    </div>\r\n);\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport Checkout from '../../components/Checkout/Checkout';\r\n\r\nconst CheckoutSummary = (props) => (\r\n    <Checkout />\r\n);\r\n\r\nexport default CheckoutSummary;","import React, { Component, lazy, Suspense } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Layout from '../hoc/Layout/Layout';\nimport { fetchGenres } from '../store/actions/bookActions';\nimport { connect } from 'react-redux';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Cart from './Cart/Cart';\nimport SignUpForm from '../components/UI/SignUpForm';\nimport CheckoutSummary from './CheckoutSummary/CheckoutSummary';\nconst Books = lazy(() => import('./Books/Books'));\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.fetchGenres();\n  }\n\n  render(){\n    return(\n      <BrowserRouter>\n        <Layout>\n          <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path='/books' exact component={Books} />\n              <Route path='/cart' exact component={Cart} />\n              <Route path='/formik' exact component={SignUpForm} />\n              <Route path='/checkout' exact component={CheckoutSummary} />\n            </Switch>\n          </Suspense>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    genres: state.bookReducer.genres,\n    books: state.bookReducer.books\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGenres: () => dispatch(fetchGenres())\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from '../actionTypes';\r\n\r\nconst initialState = {\r\n    genres: [],\r\n    books: [],\r\n    bookCount: 0,\r\n    loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.FETCH_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload\r\n            };\r\n\r\n        case actions.FETCH_BOOKS:\r\n            let arr = [];\r\n            if(Array.isArray(action.payload)){\r\n                arr = action.payload.filter(item => item !== null);\r\n            }else{\r\n                arr = Object.values(action.payload);\r\n            }\r\n            return {\r\n                ...state,\r\n                books: arr\r\n            }    \r\n\r\n        case actions.FETCH_BOOK_COUNT:\r\n            return {\r\n                ...state,\r\n                bookCount: action.payload\r\n            }\r\n\r\n        case actions.FETCH_LOADING_STATUS:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actionTypes';\r\n\r\nconst initialState = {\r\n    cart: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, action.payload]\r\n            }\r\n\r\n        case actions.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(item => item !== action.payload)\r\n            }\r\n\r\n        case actions.SET_BOOK_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map(item => {\r\n                    if(item === action.payload.book){\r\n                        let x = item;\r\n                        x.quantity = parseInt(action.payload.quantity, 10);\r\n                        return x;\r\n                    } else{\r\n                        return item;\r\n                    }\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport bookReducer from './store/reducers/bookReducer';\nimport cartReducer from './store/reducers/cartReducer';\nimport { Provider } from 'react-redux';\n\nconst logger = store => next => action => next(action);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  bookReducer: bookReducer,\n  cartReducer: cartReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartItem\":\"CartItem_CartItem__pd-kX\",\"CartItemContent\":\"CartItem_CartItemContent__1wsd3\",\"Img\":\"CartItem_Img__1hn_0\",\"Title\":\"CartItem_Title__30V04\",\"Author\":\"CartItem_Author__2ZhVD\",\"Button\":\"CartItem_Button__f6ukT\",\"Language\":\"CartItem_Language__meF4Q\",\"Price\":\"CartItem_Price__17dFV\",\"Quantity\":\"CartItem_Quantity__2wj_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartItemList\":\"CartItemList_CartItemList__1FjO6\",\"Header\":\"CartItemList_Header__3MzAi\",\"Total\":\"CartItemList_Total__1UdSl\",\"Checkout\":\"CartItemList_Checkout__3Z3wz\"};","import React from 'react';\r\n\r\nconst Aux = (props) => (\r\n    <>\r\n        {props.children}\r\n    </>\r\n);\r\n\r\nexport default Aux;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://bookstore-78d1c.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","export const FETCH_GENRES = 'FETCH_GENRES';\r\nexport const FETCH_BOOKS = 'FETCH_BOOKS';\r\nexport const FETCH_BOOK_COUNT = 'FETCH_BOOK_COUNT';\r\nexport const FETCH_LOADING_STATUS = 'FETCH_LOADING_STATUS';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const SET_BOOK_QUANTITY = 'SET_BOOK_QUANTITY';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3I7V0\",\"Dropdown\":\"NavigationItems_Dropdown__1dd8_\",\"DropdownContent\":\"NavigationItems_DropdownContent__3o7Rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"TextInput_InputContainer__3Tjot\",\"TextInput\":\"TextInput_TextInput__16XLe\",\"Error\":\"TextInput_Error__1YV82\"};","export const RESULTS_PER_PAGE = 20;\r\nexport const TEXT = 'At vero eos et accusamus et iusto odio dignissimos ducimus';","import * as actions from '../actionTypes';\r\n\r\nexport const addToCart = (book) => (\r\n    {\r\n        type: actions.ADD_TO_CART,\r\n        payload: book\r\n    }\r\n);\r\n\r\nexport const removeFromCart = (book) => (\r\n    {\r\n        type: actions.REMOVE_FROM_CART,\r\n        payload: book\r\n    }\r\n);\r\n\r\nexport const setBookQuantity = (book, quantity) => (\r\n    {\r\n        type: actions.SET_BOOK_QUANTITY,\r\n        payload: {\r\n            book: book,\r\n            quantity: quantity\r\n        }\r\n    }\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"NavigationItem_Link__1kSLP\",\"active\":\"NavigationItem_active__gQaEQ\"};","import * as actions from '../actionTypes';\r\nimport axios from '../../axios';\r\nimport * as constants from '../../assets/constants/Constants';\r\n\r\nconst updateGenres = (genres) => (\r\n    {\r\n        type: actions.FETCH_GENRES,\r\n        payload: genres\r\n    }\r\n);\r\n\r\nconst updateBooks = (books) => (\r\n    {\r\n        type: actions.FETCH_BOOKS,\r\n        payload: books\r\n    }\r\n);\r\n\r\nconst updateBookCount = (count) => (\r\n    {\r\n        type: actions.FETCH_BOOK_COUNT,\r\n        payload: count\r\n    }\r\n);\r\n\r\nconst updateBooksLoading = (flag) => (\r\n    {\r\n        type: actions.FETCH_LOADING_STATUS,\r\n        payload: flag\r\n    }\r\n);\r\n\r\nexport const fetchGenres = () => (\r\n    dispatch => {\r\n        axios.get('/genres.json')\r\n            .then(response => dispatch(updateGenres(response.data)))\r\n            .catch(error => console.log(error));\r\n    }\r\n);\r\n\r\nexport const fetchBooks = (offset = 0) => (\r\n    dispatch => {\r\n        dispatch(updateBooksLoading(true));\r\n        const link = offset === 0 ? `/books.json?orderBy=\"id\"&startAt=0&limitToFirst=${constants.RESULTS_PER_PAGE}` : `/books.json?orderBy=\"id\"&startAt=${offset+1}&limitToFirst=${constants.RESULTS_PER_PAGE}`;\r\n        axios.get(link)\r\n            .then(response => {\r\n                dispatch(updateBooks(response.data));\r\n                dispatch(updateBooksLoading(false));\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n);\r\n\r\nexport const fetchBookCount = () => (\r\n    dispatch => {\r\n        axios.get('/bookCount.json')\r\n            .then(response => dispatch(updateBookCount(response.data)))\r\n            .catch(error => console.log(error));\r\n    }\r\n);","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = (props) => (\r\n    <div className={classes.Spinner}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;"],"sourceRoot":""}